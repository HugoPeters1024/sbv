#! /bin/zsh

badLinkCount=0

clearLine () {
  len=$(($COLUMNS - 1))
  blank=`printf ' %.0s' {1..$len}`
  echo -n "\r" $blank
}

check () {
  clearLine
  filename=$1
  lineno=$2
  what=$3
  if [ z"$1" = 'zhttp' -o z"$1" = 'zhttps' ]; then
      filename="unkown_file"
      lineno="unknown_number"
      what=$1:$2
  fi

  # ignore a bunch, they fail for some reason, but it's good
  if [[ $what == http://dl.acm.org/citation.cfm ]];
  then
      return 0
  fi
  if [[ $what == https://ci.appveyor.com* ]];
  then
      return 0
  fi
  if [[ $what == http://regexcrossword.com* ]];
  then
      return 0
  fi

  echo -n "\rChecking:" "$what"
  wget -q --spider --tries=1 --timeout=5 "$what"
  ans=$?
  if [ ! $ans -eq 0 ]; then
    clearLine
    echo "\rBAD: [$filename:$lineno] $what"
    badLinkCount=$(( $badLinkCount+1 ))
    return $ans
  else
    echo -n ". GOOD"
    return $ans
  fi
}

lines=("${(f)$(grep -Eoin '(http|https)://[^?>)]+' **/*.hs **/*.md COPYRIGHT INSTALL LICENSE)}")

for i in $lines; do
    sep=$(echo $i | awk -F: '{printf("%s %s %s:", $1, $2, $3); for (i = 4; i <= NF; ++i) printf ("%s", $i)}')
    args=(${=sep})
    check $args[1] $args[2] $args[3]
    final=$?
done

if [ $final -eq 0 ]; then
    clearLine
    echo -n "\r"
fi

if [ $badLinkCount -eq 0 ]; then
    echo "All HTTP links in sources and docs are good."
    exit 0
else
    echo -n "Found $badLinkCount bad links! Continue? [y] "
    read ans
    if [ z"$ans" = 'zy' ]; then
      echo "Ignoring possibly broken links.."
      exit 0
    else
      exit 1
    fi
fi
