** Calling: z3 -nw -in -smt2
[GOOD] ; Automatically generated by SBV. Do not edit.
[GOOD] (set-option :print-success true)
[GOOD] (set-option :global-declarations true)
[GOOD] (set-option :smtlib2_compliant true)
[GOOD] (set-option :diagnostic-output-channel "stdout")
[GOOD] (set-option :produce-models true)
[GOOD] (set-logic ALL)
[GOOD] ; --- uninterpreted sorts ---
[GOOD] ; --- tuples ---
[GOOD] (declare-datatypes ((SBVTuple4 4)) ((par (T1 T2 T3 T4)
                                           ((mkSBVTuple4 (proj_1_SBVTuple4 T1)
                                                         (proj_2_SBVTuple4 T2)
                                                         (proj_3_SBVTuple4 T3)
                                                         (proj_4_SBVTuple4 T4))))))
[GOOD] ; --- literal constants ---
[GOOD] (define-fun s_2 () Bool false)
[GOOD] (define-fun s_1 () Bool true)
[GOOD] (define-fun s11 () (_ BitVec 8) #x00)
[GOOD] (define-fun s2 () Int 1)
[GOOD] (define-fun s8 () (_ BitVec 8) #x63)
[GOOD] (define-fun s5 () String "foo")
[GOOD] ; --- skolem constants ---
[GOOD] (declare-fun s0 () (SBVTuple4 Int String (_ BitVec 8) (_ BitVec 8))) ; tracks user variable "abcd"
[GOOD] ; --- constant tables ---
[GOOD] ; --- skolemized tables ---
[GOOD] ; --- arrays ---
[GOOD] ; --- uninterpreted constants ---
[GOOD] ; --- user given axioms ---
[GOOD] ; --- formula ---
[GOOD] (define-fun s1 () Int (proj_1_SBVTuple4 s0))
[GOOD] (define-fun s3 () Bool (= s1 s2))
[GOOD] (define-fun s4 () String (proj_2_SBVTuple4 s0))
[GOOD] (define-fun s6 () Bool (= s4 s5))
[GOOD] (define-fun s7 () (_ BitVec 8) (proj_3_SBVTuple4 s0))
[GOOD] (define-fun s9 () Bool (= s7 s8))
[GOOD] (define-fun s10 () (_ BitVec 8) (proj_4_SBVTuple4 s0))
[GOOD] (define-fun s12 () Bool (= s10 s11))
[GOOD] (assert s3)
[GOOD] (assert s6)
[GOOD] (assert s9)
[GOOD] (assert s12)
[SEND] (check-sat)
[RECV] sat
*** Solver   : Z3
*** Exit code: ExitSuccess
